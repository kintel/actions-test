name: macos

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: macos-latest
    env:
      OPENSCAD_LIBRARIES: ${{ github.workspace }}/../libraries/install/
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJSON(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJSON(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJSON(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJSON(matrix) }}
      run: echo "$MATRIX_CONTEXT"
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup upterm session
      uses: lhotari/action-upterm@v1
    - name: Cache Libraries
      id: cache-libraries
      uses: actions/cache@v2
      with:
        path: ${{ env.OPENSCAD_LIBRARIES }}
        key: ${{ runner.os }}-libraries-${{ hashFiles('macosx-build-dependencies.sh') }}
    - name: Build
      run: |
        echo "PWD = $CI_BASEDIR"
        echo "PATH = $PATH"
        export PKG_CONFIG_PATH="$OPENSCAD_LIBRARIES/lib/pkgconfig"
        export DYLD_LIBRARY_PATH="$OPENSCAD_LIBRARIES/lib"
        export DYLD_FRAMEWORK_PATH="$OPENSCAD_LIBRARIES/lib"
        echo "DYLD_LIBRARY_PATH: $DYLD_LIBRARY_PATH"
        ./macosx-build-dependencies.sh libzip
        tar cz -C "$OPENSCAD_LIBRARIES" -f ${{ runner.temp }}/libraries.tar.gz .
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: Build Artifacts
        path: ${{ runner.temp }}
